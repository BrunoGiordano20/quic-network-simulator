diff --git a/start.sh b/start.sh
old mode 100644
new mode 100755
index a2f96a0..4151261
--- a/start.sh
+++ b/start.sh
@@ -1,14 +1,16 @@
 #!/bin/bash
 
 echo "Ciao, questo Ã¨ un testbed automatizzato per QUIC implementation."
-echo -n "Quale test vuoi eseguire? (handshake, zerortt): "
+echo -n "Quale test vuoi eseguire? ([h]andshake, [z]erortt): "
 read -r TESTCASE
 
 declare -a IMPLEMETATION=(aioquic lsquic ngtcp2 picoquic quiche)
 case $TESTCASE in
-   "handshake")
+   "handshake"|"h")
+      TESTCASE="handshake"
       ;;
-   "zerortt")
+   "zerortt"|"z")
+      TESTCASE="zerortt"
       ;;
    *)
      echo "Scelta non valida..."
@@ -21,7 +23,7 @@ read -r IPERF_ACTIVATION
 
 case $IPERF_ACTIVATION in
    "y")
-      echo -n "Setta il target bandwidth (specificato in Mbits/s): "
+      echo -n "Setta il target bandwidth (specificato in Mbps): "
       read -r IPERF_BAND
       ;;
    "n")
@@ -44,32 +46,38 @@ echo -n "Dimensione delle code (in numero di pacchetti): "
 read -r QUEUE
 
 echo
-echo "----------------RIEPILOGO----------------"
+echo "--------------------------------------------------------"
 echo "Testcase: $TESTCASE"
-echo "Implementazioni attive nel testbed: ${IMPLEMETATION[*]}"
+echo "Implementazioni attive: ${IMPLEMETATION[*]}"
 
 case $IPERF_ACTIVATION in
    "y")
-      echo "Iperf attivo con "$IPERF_BAND"Mbps/s di target bandwidth"
+      echo "Iperf: attivo ("$IPERF_BAND"Mbps)"
       ;;
    "n")
-      echo "Iperf non attivo"
+      echo "Iperf: non attivo"
       ;;
 esac
 
-echo "Scenario: ritardo "$DELAY"ms | banda "$BANDWIDTH"Mbps | "$QUEUE" dimensione code buffer"
+echo "Scenario: ritardo "$DELAY"ms | banda "$BANDWIDTH"Mbps | coda "$QUEUE""
+echo "--------------------------------------------------------"
+echo
 
 echo -n "Vuoi avviare il testbed? (y/n): "
 read -r RISPOSTA
 
-declare SCENARIO="simple-p2p --delay="$DELAY"ms --bandwidth="$BANDWIDTH"Mbps --queue="$QUEUE""
+SCENARIO="simple-p2p --delay="$DELAY"ms --bandwidth="$BANDWIDTH"Mbps --queue="$QUEUE""
 
 case $RISPOSTA in
    "y")
       for impl in "${IMPLEMETATION[@]}" 
       do
+         echo
+         echo "---------------------------------------------"
          echo "Testing implementazione $impl con $TESTCASE"
-         
+         echo "---------------------------------------------"
+         echo
+
          echo "Building dell'immagine dei QUIC endpoint"
          CLIENT=$impl SERVER=$impl TESTCASE=$TESTCASE QLOGDIR="/logs/qlog/" SSLKEYLOGFILE="/logs/sslkeylogfile" \
          IPERF_ACTIVATION=$IPERF_ACTIVATION IPERF_BAND=$IPERF_BAND docker-compose build
@@ -80,9 +88,9 @@ case $RISPOSTA in
          SCENARIO=$SCENARIO \
          docker-compose up --abort-on-container-exit 2>/dev/null
 
-         echo "Salvataggio risultati cattura... (directory risultati: /logs/)"
-         mkdir "./logs/captures/$impl" 2>/dev/null
-         mkdir "./logs/captures/$impl/$TESTCASE" 2>/dev/null
+         PCAP_FOLDER="./logs/captures/$impl/$TESTCASE"
+         echo "Salvataggio risultati cattura... (directory risultati: $PCAP_FOLDER)"
+         mkdir -p $PCAP_FOLDER 2>/dev/null
          
             case $IPERF_ACTIVATION in
                 "y")
@@ -108,4 +116,4 @@ case $RISPOSTA in
    *)
      exit 0
      ;;
-esac
\ No newline at end of file
+esac
